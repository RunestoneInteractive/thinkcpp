<?xml version="1.0" ?><section xml:id="chapter2_glossary">
    <title>Glossary</title>
    <glossary>
        <gi>
            <title>variable</title>
            <p>A named storage location for values. All variables have a type,
            which determines which values it can store.</p>
        </gi>
        <gi>
            <title>value</title>
            <p>A letter, or number, or other thing that can be stored in a
            variable.</p>
        </gi>
        <gi>
            <title>type</title>
            <p>A set of values. The types we have seen are integers(int in C++)
            and characters ( char in C++).</p>
        </gi>
        <gi>
            <title>keyword</title>
            <p>A reserved word that is used by the compiler to parse programs.
            Examples we have seen include int, void and endl.</p>
        </gi>
        <gi>
            <title>statement</title>
            <p>A line of code that represents a command or action. So far, the
            statements we have seen are declarations, assignments, and output
            statements.</p>
        </gi>
        <gi>
            <title>declaration</title>
            <p>A statement that creates a new variable and determines its type.</p>
        </gi>
        <gi>
            <title>assignment</title>
            <p>A statement that assigns a value to a variable.</p>
        </gi>
        <gi>
            <title>expression</title>
            <p>A combination of variables, operators and values that represents a
            single result value. Expressions also have types, as determined by
            their operators and operands.</p>
        </gi>
        <gi>
            <title>operator</title>
            <p>A special symbol that represents a simple computation like addition
            or multiplication.</p>
        </gi>
        <gi>
            <title>operand</title>
            <p>One of the values on which an operator operates.</p>
        </gi>
        <gi>
            <title>precedence</title>
            <p>The order in which operations are evaluated.</p>
        </gi>
        <gi>
            <title>composition</title>
            <p>The ability to combine simple expressions and statements into
            compound statements and expressions in order to represent complex
            computations concisely.</p>
        </gi>
    </glossary>
    <reading-questions>
  <exercise label="chapter_two_glossary_1">
    <statement>
      <p>Match the terms with their definitions.</p>
    </statement>
    <cardsort>
      <match>
        <premise order="1">variable</premise>
        <response>A named storage location.</response>
      </match>
      <match>
        <premise order="2">value</premise>
        <response>A letter, or number, or other thing that can be stored.</response>
      </match>
      <match>
        <premise order="3">type</premise>
        <response>A set of values.</response>
      </match>
      <match>
        <premise order="4">keyword</premise>
        <response>A reserved word that is used by the compiler to parse programs.</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="chapter_two_glossary_2">
    <statement>
      <p>Match the terms with their definitions.</p>
    </statement>
    <cardsort>
      <match>
        <premise order="1">statement</premise>
        <response>A line of code that represents a command or action.</response>
      </match>
      <match>
        <premise order="2">declaration</premise>
        <response>A statement that creates a new variable and determines its type.</response>
      </match>
      <match>
        <premise order="3">assignment</premise>
        <response>A statement that assigns a value to a variable.</response>
      </match>
      <match>
        <premise order="4">expression</premise>
        <response>A combination of variables, operators and values that represents a single result
          value.</response>
      </match>
    </cardsort>
  </exercise>
  <exercise label="chapter_two_glossary_3">
    <statement>
      <p>Match the terms with their definitions.</p>
    </statement>
    <cardsort>
      <match>
        <premise order="1">operator</premise>
        <response>A special symbol that represents a simple computation.</response>
      </match>
      <match>
        <premise order="2">operand</premise>
        <response>One of the values that is operated on.</response>
      </match>
      <match>
        <premise order="3">precedence</premise>
        <response>The order in which operations are evaluated.</response>
      </match>
      <match>
        <premise order="4">composition</premise>
        <response>To combine simple expressions and statements into compound statements and
          expressions.</response>
      </match>
    </cardsort>
  </exercise>
    </reading-questions>
</section>
