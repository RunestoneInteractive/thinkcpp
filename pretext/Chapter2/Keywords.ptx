<?xml version="1.0"?>
<section xml:id="chapter2_keywords">
  <title>Keywords</title>
  <p>A few sections ago, I said that you can make up any name you want for
            your variables, but that's not quite true. There are certain words that
            are reserved in C++ because they are used by the compiler to parse the
            structure of your program, and if you use them as variable names, it
            will get confused. These words, called <term>keywords</term>, include <c>int</c>, <c>char</c>,
            <c>void</c>, <c>endl</c> and many more.</p>
  <p>A list of C++ keywords is availiable publically on <c>cppreference</c>.  You can
            take a look for yourself by pasting the following link into your browser.</p>
  <pre>https://en.cppreference.com/w/cpp/keyword</pre>
  <p>Rather than memorize the list, I would suggest that you take advantage
            of a feature provided in many development environments: code
            highlighting. As you type, different parts of your program should appear
            in different colors. For example, keywords might be blue, strings red,
            and other code black.</p>
  <warning>
    <p>If you type a variable name and it turns blue, watch out! You might get
                some strange behavior from the compiler.</p>
  </warning>
  <note>
    <p>Case matters!  You can name a <c>string</c> variable <c>String</c> without an issue
                because C++ does not consider <c>String</c> to be the same as keyword <c>string</c>.
                Also, a anything written in quotes, for example <c>"string"</c> is not considered
                a keyword in C++, even if it is spelt the same.</p>
  </note>
  <listing label="keywords_1">
    <caption>
      <p>Words that are reserved in C++ because they are used by the compiler to parse the structure of your program are called <var/>.</p>
    </caption>
    <setup>
      <var case="insensitive">
        <condition string="^\s*keywords\s*$">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string="^\s*.*\s*$">
          <feedback>
            <p>Try again!</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </listing>
  <listing label="keywords_2">
    <caption>
      <p>Multiple Response: Which of the following are keywords or will otherwise generate some error from the compiler if used as a variable name?</p>
    </caption>
    <choices>
      <choice>
        <caption>
          <p>integer</p>
        </caption>
        <feedback>
          <p>integer is not a keyword, but int is.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <caption>
          <p>cout</p>
        </caption>
        <feedback>
          <p>cout cannot be used as a variable name!</p>
        </feedback>
      </choice>
      <choice>
        <caption>
          <p>variable</p>
        </caption>
        <feedback>
          <p>variable is fair game to use to name a variable.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <caption>
          <p>string</p>
        </caption>
        <feedback>
          <p>string cannot be used as a variable name.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <caption>
          <p>char</p>
        </caption>
        <feedback>
          <p>char is a keyword and cannot be used as a variable name.</p>
        </feedback>
      </choice>
    </choices>
  </listing>
  <listing label="keywords_3">
    <caption>
      <p>Click on all keywords.</p>
    </caption>
    <feedback>
      <p>Try again!</p>
    </feedback>
    <areas>
      <cline><area correct="yes">int</area> main() {</cline>
      <cline><area correct="yes">double</area><area correct="no">x</area> = 1.0;</cline>
      <cline><area correct="yes">int</area><area correct="no">y</area> = <area correct="no">x</area> + 5;</cline>
      <cline><area correct="yes">bool</area><area correct="no">Bool</area>;</cline>
      <cline><area correct="yes">string</area><area correct="no">s</area> = <area correct="no">"void"</area>;</cline>
      <cline><area correct="yes">if</area> (<area correct="no">y</area> &gt; <area correct="no">x</area>) {</cline>
      <cline><area correct="no">Bool</area> = <area correct="yes">true</area>;</cline>
      <cline>    }</cline>
      <cline><area correct="no">cout</area> &lt;&lt; <area correct="no">Bool</area> &lt;&lt; <area correct="yes">endl</area>;</cline>
      <cline>}</cline>
    </areas>
  </listing>
  <listing label="keywords_4">
    <caption>
      <p>Fix the code below so that it runs without errors.  Hint: you might need to change the names of some variables.</p>
    </caption>
    <program xml:id="keywords_4_editor" interactive="activecode" language="cpp" line-numbers="yes">
      <input><![CDATA[
#include <iostream>
using namespace std;

int main () {
    int friend = 4;
    int enemy = friend * (-1);
    cout << "enemy = " << enemy << endl;

    // Do not modify anything below.
    return 0;
}
        ]]></input>
    </program>
  </listing>
</section>
