<?xml version="1.0"?>
<section xml:id="chapter5_returning-from-main">
  <title>Returning from main</title>
  <p>Now that we have functions that return values, I can let you in on a
            secret. main is not really supposed to be a void function. It's supposed
            to return an integer:</p>
  <program>int main () {
  return 0;
}</program>
  <p>The usual return value from main is 0, which indicates that the program
            succeeded at whatever it was supposed to do. If something goes wrong, it
            is common to return -1, or some other value that indicates what kind of
            error occurred.</p>
  <p>Of course, you might wonder who this value gets returned to, since we
            never call main ourselves. It turns out that when the system executes a
            program, it starts by calling main in pretty much the same way it calls
            all the other functions.</p>
  <p>There are even some parameters that are passed to main by the system,
            but we are not going to deal with them for a little while.</p>
  <listing label="return_main_mc_1">
    <caption>
      <p>What data type is the main function supposed to return?</p>
    </caption>
    <choices>
      <choice>
        <caption>
          <p>string</p>
        </caption>
        <feedback>
          <p>Look at the function definition for main.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <caption>
          <p>integer</p>
        </caption>
        <feedback>
          <p>Correct!  You should always return an integer to avoid issues down the road.</p>
        </feedback>
      </choice>
      <choice>
        <caption>
          <p>nothing</p>
        </caption>
        <feedback>
          <p>Main is supposed to return something!</p>
        </feedback>
      </choice>
      <choice>
        <caption>
          <p>anything</p>
        </caption>
        <feedback>
          <p>Main has a return type, check its function definition.</p>
        </feedback>
      </choice>
    </choices>
  </listing>
  <listing label="fitb_return_main_2">
    <caption>
      <p>Usually, we return <var/> to exit main.  However, if there are
any errors that we catch, we might return <var/>. <var/>  <var/>  </p>
    </caption>
    <setup>
      <var case="insensitive">
        <condition string="^\s*[0]\s*$">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string="^\s*x\s*$">
          <feedback>
            <p>Try again!</p>
          </feedback>
        </condition>
      </var>
      <var>
        <condition number="[-1, -1]">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string="^\s*.*\s*$">
          <feedback>
            <p>Try again!</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </listing>
  <listing label="return_main_mc_2">
    <caption>
      <p>What gets printed when the following code runs?</p>
      <program>int main() {
    bool sun_set=true;
    if(sun_set) {
        cout &lt;&lt; "its night time ";
        sun_set=false;
        return 0;
    }
    if(!sun_set) {
        cout &lt;&lt; "Day time ";
    }
    else {
        cout &lt;&lt; "afternoon ";
    }
}</program>
    </caption>
    <choices>
      <choice>
        <caption>
          <p>"its night time Day time"</p>
        </caption>
        <feedback>
          <p>a return statement if encountered before reaching the second ``if``.</p>
        </feedback>
      </choice>
      <choice>
        <caption>
          <p>"its night time afternoon"</p>
        </caption>
        <feedback>
          <p>a return statement is encountered before and ``sun_set`` is false.</p>
        </feedback>
      </choice>
      <choice>
        <caption>
          <p>nothing is printed</p>
        </caption>
        <feedback>
          <p>``sun_set`` is true so the "its night time" gets printed</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <caption>
          <p>"its night time"</p>
        </caption>
        <feedback>
          <p>Correct! Once the ``return`` statement is encountered nothing else is printed</p>
        </feedback>
      </choice>
    </choices>
  </listing>
</section>
